@model DataLayer.Products
@using DataLayer;

@{
    ViewBag.Title = "Create";
    List<Product_Selected_Groups> selectedGroups = ViewBag.SelectedGroups;
}

<h2>ویرایش محصول</h2>
<di class="row">
    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(x => x.CreateDate)
        @Html.HiddenFor(x => x.ProductID)
        @Html.HiddenFor(x => x.ImageName)

        <div class="col-md-8">
            @Html.AntiForgeryToken()
            @if (ViewBag.ErrorSelectedGroups == true)
            {
                <div class="alert alert-danger">
                    لطفا گروه مورد نظر را انتخاب کنید.
                </div>
            }

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <span class="control-label col-md-2">کلمات کلیدی</span>
                    <div class="col-md-10">
                        <input class="form-control" type="text" value="@ViewBag.Tags" name="tags" placeholder="کلمات کلیدی را با  , جدا کنید" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="ویرایش محصول" class="btn btn-warning" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-primary">
                <div class="panel-heading">تصویر محصول</div>
                <div class="panel-body">
                    <img id="imgPreviewProduct" style="margin:8px auto" class="thumbnail" src="/Images/ProductImages/@Model.ImageName" />
                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" id="imageProduct" name="imageProduct" />
                            @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">انتخاب گروه</div>
                <div class="panel-body">
                    @{
                        List<Product_Groups> Groups = ViewBag.Groups;
                        <ul>
                            @foreach (var group in Groups.Where(x => x.ParentID == null))
                            {
                                <li>
                                    <input type="checkbox" @((selectedGroups.Any(x => x.GroupID == group.GroupID) ? "Checked":""))
                                           name="selectedGroups" value="@group.GroupID" /> <span>@group.GroupTitle</span>

                                    @if (Groups.Any(x => x.ParentID == group.GroupID))
                                    {
                                        <ul>
                                            @foreach (var subGroups in Groups.Where(x => x.ParentID == group.GroupID))
                                            {
                                                <li>
                                                    <input type="checkbox" @((selectedGroups.Any(x => x.GroupID == subGroups.GroupID) ? "Checked":"")) name="selectedGroups" value="@subGroups.GroupID" /> <span>@subGroups.GroupTitle</span>
                                                </li>
                                            }

                                        </ul>
                                    }
                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("بازگشت به لیست محصولات", "Index")
    </div>

    @section imagePreview{
        <script>
            function readUrl(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imgPreviewProduct').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#imageProduct").change(function () {
                readUrl(this);
            });
        </script>
        <script src="/ckeditor/ckeditor.js"></script>
        <script src="/ckeditor/adapters/jquery.js"></script>
        <script>
            $(function () {
                $('#Text').ckeditor();
            });
        </script>
    }
